<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>Argument validation methods, for example:
this.user = Argument.NotNull("user", user).

Less fancy than approaches based on lambdas/anonymous classes, but less scary performance-wise (given that argument checks are often all over the place).

Annotations: C# 8 nullable reference types, ReSharper, Microsoft.CodeQuality.Analyzers, Code Contracts (.NET 4.5 only).</Description>
    <Copyright>Copyright (c) 2013–2020 Andrey Shchekin</Copyright>
    <VersionPrefix>1.3</VersionPrefix>
    <Authors>Andrey Shchekin</Authors>
    <TargetFrameworks>net45;netstandard11</TargetFrameworks>
    <AssemblyName>Argument</AssemblyName>
    <PackageId>Argument</PackageId>
    <PackageTags>contracts;validation;argument</PackageTags>
    <PackageProjectUrl>https://github.com/ashmind/argument</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/ashmind/argument/blob/master/License.txt</PackageLicenseUrl>
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsAsErrors />
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard11' ">
    <PackageReference Include="System.Runtime" Version="4.1.0" />
    <PackageReference Include="System.Collections" Version="4.0.11" />
    <PackageReference Include="System.Diagnostics.Contracts" Version="4.0.1" />
  </ItemGroup>

</Project>
